DOCX PARSER CONVERTER - STYLE_CONVERTER.PY DOCUMENTATION
=========================================================

FILE PURPOSE:
This file contains the StyleConverter class that converts DOCX style properties to CSS style attributes. It provides a comprehensive mapping between DOCX formatting properties and their equivalent CSS representations for HTML output.

IMPORTS:
- docx_parser_converter.docx_parsers.models.styles_models: For style data models (FontProperties, SpacingProperties, IndentationProperties)
- docx_parser_converter.docx_parsers.models.document_models.DocMargins: For document margin data model

FUNCTIONS:
None defined outside of classes.

CLASSES:

1. StyleConverter
   Purpose: A converter class for converting DOCX style properties to CSS style attributes
   Description: This class provides static methods for converting various DOCX formatting properties into their CSS equivalents. It handles text formatting, spacing, indentation, alignment, and document-level styling for HTML output.

   METHODS:

   convert_bold(bold: bool) -> str [STATIC METHOD]
   Purpose: Converts bold property to CSS style
   Parameters:
   - bold (bool): The bold property
   Returns: str - The CSS style string for bold
   Description: Converts DOCX bold formatting to CSS font-weight property. Returns "font-weight:bold;" when bold is True, empty string otherwise.

   convert_italic(italic: bool) -> str [STATIC METHOD]
   Purpose: Converts italic property to CSS style
   Parameters:
   - italic (bool): The italic property
   Returns: str - The CSS style string for italic
   Description: Converts DOCX italic formatting to CSS font-style property. Returns "font-style:italic;" when italic is True, empty string otherwise.

   convert_underline(underline: str) -> str [STATIC METHOD]
   Purpose: Converts underline property to CSS style
   Parameters:
   - underline (str): The underline property
   Returns: str - The CSS style string for underline
   Description: Converts DOCX underline formatting to CSS text-decoration property. Supports various underline styles including single, double, words, dotted, dashed, dot-dash, dot-dot-dash, wavy, and none. Uses a mapping dictionary to translate DOCX underline types to CSS equivalents.

   convert_color(color: str) -> str [STATIC METHOD]
   Purpose: Converts color property to CSS style
   Parameters:
   - color (str): The color property
   Returns: str - The CSS style string for color
   Description: Converts DOCX color formatting to CSS color property. Expects color values in CSS-compatible format (e.g., #FF0000).

   convert_font(font: FontProperties) -> str [STATIC METHOD]
   Purpose: Converts font properties to CSS style
   Parameters:
   - font (FontProperties): The font properties
   Returns: str - The CSS style string for font
   Description: Converts DOCX font properties to CSS font-family property. Currently extracts the ASCII font name and applies it as the font family.

   convert_size(size_pt: float) -> str [STATIC METHOD]
   Purpose: Converts font size property to CSS style
   Parameters:
   - size_pt (float): The font size in points
   Returns: str - The CSS style string for font size
   Description: Converts DOCX font size to CSS font-size property. Uses point units (pt) for consistent sizing across different displays.

   convert_spacing(spacing: SpacingProperties) -> str [STATIC METHOD]
   Purpose: Converts spacing properties to CSS style
   Parameters:
   - spacing (SpacingProperties): The spacing properties
   Returns: str - The CSS style string for spacing
   Description: Converts DOCX spacing properties to CSS margin and line-height properties. Maps:
   - before_pt to margin-top
   - after_pt to margin-bottom
   - line_pt to line-height
   All values are converted to point units for consistency.

   convert_indent(indent: IndentationProperties) -> str [STATIC METHOD]
   Purpose: Converts indentation properties to CSS style
   Parameters:
   - indent (IndentationProperties): The indentation properties
   Returns: str - The CSS style string for indentation
   Description: Converts DOCX indentation properties to CSS margin and text-indent properties. Maps:
   - left_pt to margin-left
   - right_pt to margin-right
   - firstline_pt to text-indent
   Handles both positive and negative indentation values.

   convert_justification(justification: str) -> str [STATIC METHOD]
   Purpose: Converts justification property to CSS style
   Parameters:
   - justification (str): The justification property
   Returns: str - The CSS style string for justification
   Description: Converts DOCX text alignment to CSS text-align property. Maps DOCX justification values to CSS equivalents:
   - left → left
   - center → center
   - right → right
   - both → justify
   - distribute → justify
   Defaults to 'left' for unknown values.

   convert_doc_margins(margins: DocMargins) -> str [STATIC METHOD]
   Purpose: Converts document margins to CSS style
   Parameters:
   - margins (DocMargins): The document margins
   Returns: str - The CSS style string for document margins
   Description: Converts DOCX document margins to CSS padding and margin properties. Maps:
   - Page margins (top, right, bottom, left) to padding
   - Header margin to additional padding-top
   - Footer margin to additional padding-bottom
   - Gutter margin to margin-left
   Provides comprehensive page layout styling for HTML documents.

INSTANCE ATTRIBUTES:
None (static method class).

DATA MODELS USED:
- FontProperties: Font family and typeface information
- SpacingProperties: Paragraph spacing and line height settings
- IndentationProperties: Text indentation and margin settings
- DocMargins: Document-level margin specifications

DEPENDENCIES:
- Style data models for structured input
- CSS property generation for HTML output

USAGE CONTEXT:
This converter is used throughout the HTML conversion pipeline to translate DOCX formatting into CSS styles. It provides:
- Consistent CSS output for DOCX formatting properties
- Proper unit conversion (points for web compatibility)
- Comprehensive style mapping for various formatting types
- Integration with HTML generation for styled output

STYLE CONVERSION COVERAGE:
- **Text Formatting**: Bold, italic, underline, color, font family, font size
- **Paragraph Formatting**: Spacing (before/after/line), indentation, alignment
- **Document Formatting**: Page margins, headers, footers, gutters

CSS OUTPUT FORMAT:
- Uses point units (pt) for consistent sizing
- Generates inline CSS style strings
- Follows CSS property naming conventions
- Provides fallback values for missing properties
- Maintains proper CSS syntax with semicolons

ERROR HANDLING:
- Returns empty strings for missing or invalid properties
- Uses fallback values for unknown justification types
- Handles None values gracefully
- Provides safe property access with conditional checks

TECHNICAL NOTES:
- Uses static methods for stateless operation
- Maintains CSS compatibility across different browsers
- Provides comprehensive mapping between DOCX and CSS properties
- Supports both basic and advanced formatting features
- Integrates seamlessly with HTML generation pipeline 