DOCX PARSER CONVERTER - DOCX_XML_LIST.PY DOCUMENTATION
======================================================

FILE PURPOSE:
This file provides a utility function for extracting and examining the XML structure of DOCX files. It's primarily used for debugging and development purposes to understand the internal XML structure of DOCX documents by extracting all XML files and pretty-printing them for human readability.

IMPORTS:
- zipfile: For working with ZIP archives (DOCX files are ZIP archives)
- pathlib.Path: For file path manipulation
- xml.dom.minidom.parseString: For XML parsing and pretty-printing

FUNCTIONS:

1. extract_docx_xml(docx_path: str)
   Purpose: Extracts and pretty prints XML files from a DOCX file
   Parameters:
   - docx_path (str): The file path to the DOCX file
   Returns: None (writes files to disk)
   Raises: ValueError - If the provided file is not a .docx file
   Description: This function extracts all XML files from a DOCX file, pretty prints the XML content, and saves each XML file's content to a .txt file in a directory named after the DOCX file. The function performs the following operations:
   
   1. Validates that the input file has a .docx extension
   2. Creates an output directory based on the DOCX filename
   3. Opens the DOCX file as a ZIP archive
   4. Iterates through all files in the archive
   5. Identifies XML files by their .xml extension
   6. Extracts and parses each XML file
   7. Pretty-prints the XML content for readability
   8. Saves each XML file as a .txt file with a sanitized filename
   9. Prints progress messages for each extracted file

   The output files are named by replacing path separators with underscores and appending .txt extension.

CLASSES:
None defined in this file.

DATA MODELS:
None defined in this file.

DEPENDENCIES:
- Standard library zipfile for ZIP archive handling
- Standard library pathlib for cross-platform path operations
- Standard library xml.dom.minidom for XML parsing and formatting

USAGE CONTEXT:
This utility is primarily used for:
- Development and debugging of DOCX parsers
- Understanding the internal structure of DOCX files
- Examining XML content for troubleshooting parsing issues
- Educational purposes to learn about DOCX file format
- Quality assurance and testing of DOCX processing

OUTPUT STRUCTURE:
The function creates a directory structure like:
```
document_name/
├── word_document.xml.txt
├── word_styles.xml.txt
├── word_numbering.xml.txt
├── word_settings.xml.txt
└── ... (other XML files)
```

ERROR HANDLING:
- Validates file extension before processing
- Uses exist_ok=True when creating directories to handle existing directories gracefully
- Handles file encoding with UTF-8 specification

MAIN SECTION:
The file includes a main section with commented examples showing different DOCX file paths that can be processed. This serves as both a test and demonstration of the function's usage.

TECHNICAL NOTES:
- DOCX files are essentially ZIP archives containing XML files
- The function preserves the original XML structure while making it human-readable
- File paths within the ZIP are converted to valid filenames by replacing separators
- Pretty-printing adds indentation and line breaks for better readability 