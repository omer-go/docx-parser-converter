DOCX PARSER CONVERTER - TABLE_ROW_PARSER.PY DOCUMENTATION
==========================================================

FILE PURPOSE:
This file contains the TableRowParser class that extracts and parses table rows from DOCX table XML elements. It handles the conversion of table row XML elements into structured TableRow objects, including row properties and all contained table cells.

IMPORTS:
- lxml.etree: For XML parsing and manipulation
- docx_parser_converter.docx_parsers.helpers.common_helpers: For XML helper functions (extract_element, NAMESPACE)
- docx_parser_converter.docx_parsers.models.table_models.TableRow: For table row data model
- docx_parser_converter.docx_parsers.tables.table_row_properties_parser.TableRowPropertiesParser: For parsing row properties
- docx_parser_converter.docx_parsers.tables.table_cell_parser.TableCellParser: For parsing table cells

FUNCTIONS:
None defined outside of classes.

CLASSES:

1. TableRowParser
   Purpose: A parser for extracting table rows from an XML element
   Description: This class provides static methods for parsing table rows from DOCX table XML elements. It extracts row properties and all contained table cells to create complete TableRow objects representing the structure and content of table rows.

   METHODS:

   parse(row_element: etree.Element) -> TableRow [STATIC METHOD]
   Purpose: Parses a table row from the given XML element
   Parameters:
   - row_element (etree.Element): The row XML element
   Returns: TableRow - The parsed table row
   Description: Main parsing method that extracts all table row components and assembles them into a complete TableRow object. The method:
   
   1. **Properties Extraction**: Extracts row properties using TableRowPropertiesParser
   2. **Cell Parsing**: Parses all table cells contained within the row
   3. **Object Assembly**: Creates a complete TableRow object with properties and cells
   
   Handles complex table row structures including:
   - Row properties (height, header settings, formatting)
   - Multiple table cells with individual properties and content
   - Row-level formatting and layout specifications
   - Header row identification and special handling

INSTANCE ATTRIBUTES:
None (static method class).

DATA MODELS USED:
- TableRow: Complete table row representation with properties and cells
- TableRowProperties: Row-specific formatting and layout properties
- TableCell: Individual cell elements within the row

DEPENDENCIES:
- TableRowPropertiesParser for extracting row formatting properties
- TableCellParser for parsing individual table cells
- XML helper functions for element extraction and namespace handling
- Table data models for structured representation

USAGE CONTEXT:
This parser is used by higher-level table parsers to extract individual table rows. Table rows are the horizontal structural elements within tables, containing:
- **Row Properties**: Height, header settings, formatting specifications
- **Table Cells**: All cells contained within the row
- **Layout Information**: Row-level layout and formatting settings
- **Structure**: Position within table hierarchy

TABLE ROW COMPONENTS PARSED:
- **Row Properties**: Complete formatting and layout specifications
- **Table Cells**: All cell content and properties within the row
- **Namespace Handling**: Proper XML namespace resolution for element finding

ROW PROPERTY TYPES SUPPORTED:
- **Height**: Row height specifications with various measurement types
- **Header Settings**: Table header row identification
- **Formatting**: Row-level formatting and appearance settings
- **Layout**: Row positioning and layout specifications

CELL HANDLING:
- **Multiple Cells**: Supports rows with any number of cells
- **Cell Parsing**: Uses dedicated TableCellParser for complete cell processing
- **Content Preservation**: Maintains all cell properties and content
- **Namespace Resolution**: Proper XML namespace handling for cell discovery

ERROR HANDLING:
- **Missing Properties**: Handles rows without property elements gracefully
- **Empty Rows**: Processes rows with no cell content
- **Malformed XML**: Continues processing when individual elements are malformed
- **Namespace Issues**: Uses proper namespace resolution for reliable element finding

TECHNICAL FEATURES:
- **Static Methods**: Stateless operation for efficiency
- **Comprehensive Parsing**: Extracts both properties and cell content
- **Modular Design**: Delegates specific parsing to specialized parsers
- **XML Namespace Support**: Proper handling of Word document namespaces

INTEGRATION POINTS:
- **TableRowPropertiesParser**: Handles row formatting extraction
- **TableCellParser**: Processes individual table cells
- **Table Models**: Uses structured data models for representation

USAGE EXAMPLES:

**Basic Row Parsing:**
```python
row = TableRowParser.parse(row_element)
```

**Accessing Row Components:**
```python
row_properties = row.properties
row_cells = row.cells
cell_count = len(row.cells)
```

TECHNICAL NOTES:
- Uses static methods for stateless operation
- Supports complex table row structures with multiple cells
- Maintains proper XML namespace handling for reliable parsing
- Integrates seamlessly with the broader table parsing system
- Provides complete row representation for accurate table reconstruction 