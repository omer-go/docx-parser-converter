DOCX PARSER CONVERTER - MARGINS_PARSER.PY DOCUMENTATION
========================================================

FILE PURPOSE:
This file contains the MarginsParser class that extracts and parses margin properties from section properties in DOCX documents. It handles the conversion of page margin XML elements into structured DocMargins objects, including all types of margins (page, header, footer, and gutter).

IMPORTS:
- lxml.etree: For XML parsing and manipulation
- typing.Optional: For type hints
- docx_parser_converter.docx_parsers.helpers.common_helpers: For XML helper functions (extract_element, extract_attribute)
- docx_parser_converter.docx_parsers.utils.convert_twips_to_points: For unit conversion
- docx_parser_converter.docx_parsers.models.document_models.DocMargins: For margin data model

FUNCTIONS:
None defined outside of classes.

CLASSES:

1. MarginsParser
   Purpose: Parses the margin properties of a section in a docx document
   Description: This class contains methods to parse the margin properties from the section properties (sectPr) element of a docx document. The margin properties are essential for understanding the layout of the document and page formatting.

   METHODS:

   parse(sectPr: Optional[etree.Element]) -> Optional[DocMargins] [STATIC METHOD]
   Purpose: Parses margins from the given section properties XML element
   Parameters:
   - sectPr (Optional[etree.Element]): The section properties XML element that can contain margin properties which define the top, right, bottom, left, header, footer, and gutter margins of the section
   Returns: Optional[DocMargins] - The parsed margins, or None if not found
   Description: Extracts page margin information from the section properties element. The method:
   
   1. Looks for the page margin element (w:pgMar) within section properties
   2. Extracts all margin attributes (top, right, bottom, left, header, footer, gutter)
   3. Handles alternative attribute names (end/start for right/left margins)
   4. Converts margin values from twips to points for consistency
   5. Creates a DocMargins object with all extracted values
   6. Returns None if no margin element is found

   The method handles both standard margin attributes and alternative names used in different DOCX versions or locales.

INSTANCE ATTRIBUTES:
None (static method class).

DATA MODELS USED:
- DocMargins: Container for all document margin properties including page margins, header/footer margins, and gutter margins

DEPENDENCIES:
- lxml for XML parsing
- Helper functions for XML element and attribute extraction
- Utility functions for unit conversion from twips to points
- DocMargins model for structured data representation

USAGE CONTEXT:
This parser is used by higher-level parsers (like DocumentParser) to extract page layout information from DOCX documents. Margins are crucial for document formatting and layout, affecting how content is positioned on the page and how much space is available for text and other elements.

MARGIN TYPES SUPPORTED:
- Top margin: Space at the top of the page
- Right margin: Space at the right side of the page (also supports 'end' attribute)
- Bottom margin: Space at the bottom of the page
- Left margin: Space at the left side of the page (also supports 'start' attribute)
- Header margin: Space reserved for page headers
- Footer margin: Space reserved for page footers
- Gutter margin: Additional margin for binding

UNIT CONVERSION:
- All margin values are converted from twips (twentieths of a point) to points
- Handles None values gracefully when margin attributes are not present
- Maintains precision during conversion

ERROR HANDLING:
- Returns None if no section properties element is provided
- Returns None if no page margin element is found
- Handles missing margin attributes by setting corresponding fields to None
- Uses safe integer conversion with None checking

TECHNICAL NOTES:
- Supports both standard and alternative attribute names for internationalization
- Uses static method design for stateless operation
- Maintains all margin information in a single structured object
- Provides comprehensive margin parsing for complete page layout understanding 