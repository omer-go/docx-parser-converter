DOCX PARSER CONVERTER - TABLE_MODELS.PY DOCUMENTATION
====================================================

FILE PURPOSE:
This file defines comprehensive Pydantic data models for representing table structures in DOCX documents. It provides models for tables, table rows, table cells, and all their associated properties including borders, shading, margins, and layout settings. These models capture the complex table formatting capabilities of DOCX documents.

IMPORTS:
- pydantic.BaseModel, pydantic.Field: For data validation and modeling
- typing.Optional, typing.List, typing.TYPE_CHECKING: For type hints
- docx_parser_converter.docx_parsers.models.paragraph_models.Paragraph: For paragraph elements within table cells

FUNCTIONS:
None defined in this file.

CLASSES/DATA MODELS:

1. BorderProperties(BaseModel)
   Purpose: Represents the border properties for a table cell
   Fields:
   - color (Optional[str]): The color of the border
   - size (Optional[int]): The size of the border
   - space (Optional[int]): The space between the border and the text
   - val (Optional[str]): The style of the border
   Description: Models individual border properties including color, size, spacing, and style.

2. ShadingProperties(BaseModel)
   Purpose: Represents the shading properties for a table cell
   Fields:
   - fill (Optional[str]): The fill color
   - val (Optional[str]): The shading pattern
   - color (Optional[str]): The color of the shading
   Description: Models background shading and fill properties for table elements.

3. MarginProperties(BaseModel)
   Purpose: Represents the margin properties for a table cell
   Fields:
   - top (Optional[float]): The top margin in points
   - left (Optional[float]): The left margin in points
   - bottom (Optional[float]): The bottom margin in points
   - right (Optional[float]): The right margin in points
   Description: Models the internal margins within table cells.

4. TableWidth(BaseModel)
   Purpose: Represents the width of a table or table cell
   Fields:
   - type (Optional[str]): The type of width (e.g., 'dxa')
   - width (Optional[float]): The width in points
   Description: Models width specifications for tables and cells with different measurement types.

5. TableIndent(BaseModel)
   Purpose: Represents the indent of a table
   Fields:
   - type (Optional[str]): The type of indent (e.g., 'dxa')
   - width (Optional[float]): The indent width in points
   Description: Models table indentation from the page margin.

6. TableLook(BaseModel)
   Purpose: Represents the look settings for a table
   Fields:
   - firstRow (Optional[bool]): Indicates if the first row has special formatting
   - lastRow (Optional[bool]): Indicates if the last row has special formatting
   - firstColumn (Optional[bool]): Indicates if the first column has special formatting
   - lastColumn (Optional[bool]): Indicates if the last column has special formatting
   - noHBand (Optional[bool]): Indicates if horizontal banding is disabled
   - noVBand (Optional[bool]): Indicates if vertical banding is disabled
   Description: Models table style settings that control special formatting for specific rows/columns and banding.

7. TableCellBorders(BaseModel)
   Purpose: Represents the border properties for a table cell
   Fields:
   - top (Optional[BorderProperties]): The top border properties
   - left (Optional[BorderProperties]): The left border properties
   - bottom (Optional[BorderProperties]): The bottom border properties
   - right (Optional[BorderProperties]): The right border properties
   - insideH (Optional[BorderProperties]): The inside horizontal border properties
   - insideV (Optional[BorderProperties]): The inside vertical border properties
   Description: Models all border properties for a table cell including external and internal borders.

8. TableCellProperties(BaseModel)
   Purpose: Represents the properties of a table cell
   Fields:
   - tcW (Optional[TableWidth]): The width of the table cell
   - tcBorders (Optional[TableCellBorders]): The borders of the table cell
   - shd (Optional[ShadingProperties]): The shading properties of the table cell
   - tcMar (Optional[MarginProperties]): The margin properties of the table cell
   - textDirection (Optional[str]): The text direction of the table cell
   - vAlign (Optional[str]): The vertical alignment of the table cell
   - hideMark (Optional[bool]): Indicates if the cell contains hidden marks
   - cellMerge (Optional[str]): The cell merge properties
   - gridSpan (Optional[int]): The number of grid columns spanned by the table cell
   Description: Comprehensive model for all table cell properties including dimensions, formatting, alignment, and merging.

9. TableCell(BaseModel)
   Purpose: Represents a table cell in a table row
   Fields:
   - properties (Optional[TableCellProperties]): The properties of the table cell
   - paragraphs (List[Paragraph]): The list of paragraphs within the table cell (required)
   Description: Models a complete table cell containing its properties and content (paragraphs).

10. TableRowProperties(BaseModel)
    Purpose: Represents the properties of a table row
    Fields:
    - trHeight (Optional[str]): The height of the table row
    - trHeight_hRule (Optional[str]): The height rule for the table row
    - tblHeader (Optional[bool]): Indicates if the row is a table header
    - justification (Optional[str]): The justification for the row content
    - tblBorders (Optional[TableCellBorders]): The borders for the table row
    - shd (Optional[ShadingProperties]): The shading properties for the table row
    Description: Models row-level properties including height, header status, alignment, and formatting.

11. TableRow(BaseModel)
    Purpose: Represents a row within a table
    Fields:
    - properties (Optional[TableRowProperties]): The properties of the table row
    - cells (List[TableCell]): The list of cells in the table row (required)
    Description: Models a complete table row containing its properties and cells.

12. TableProperties(BaseModel)
    Purpose: Represents the properties of a table
    Fields:
    - tblStyle (Optional[str]): The style of the table
    - tblW (Optional[TableWidth]): The width of the table
    - justification (Optional[str]): The justification for the table
    - tblInd (Optional[TableIndent]): The indent of the table
    - tblCellMar (Optional[MarginProperties]): The cell margins of the table
    - tblBorders (Optional[TableCellBorders]): The borders of the table
    - shd (Optional[ShadingProperties]): The shading properties of the table
    - tblLayout (Optional[str]): The layout of the table
    - tblLook (Optional[TableLook]): The look settings of the table
    Description: Comprehensive model for all table-level properties including style, dimensions, layout, and formatting.

13. TableGrid(BaseModel)
    Purpose: Represents the grid structure of a table
    Fields:
    - columns (List[float]): The list of column widths in points (required)
    Description: Models the column structure and widths for a table.

14. Table(BaseModel)
    Purpose: Represents a table in the document
    Fields:
    - properties (Optional[TableProperties]): The properties of the table
    - grid (Optional[TableGrid]): The grid structure of the table
    - rows (List[TableRow]): The list of rows in the table (required)
    Description: Top-level model for a complete table containing properties, grid structure, and rows.

DEPENDENCIES:
- Pydantic for data validation and modeling
- paragraph_models module for Paragraph data model
- Standard typing module for type hints

DATA RELATIONSHIPS:
- Table contains TableProperties, TableGrid, and multiple TableRow objects
- TableRow contains TableRowProperties and multiple TableCell objects
- TableCell contains TableCellProperties and multiple Paragraph objects
- Various property classes reference each other (e.g., TableCellBorders contains BorderProperties)
- Complex hierarchical structure representing the nested nature of table elements

USAGE CONTEXT:
These models are used to represent the complex table structures found in DOCX documents. They capture all aspects of table formatting including layout, borders, shading, alignment, and content. The hierarchical structure mirrors the XML structure of tables in DOCX files, allowing for accurate parsing and reconstruction of table data during document conversion processes. 